//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.10.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/bartt/RiderProjects/IsisPapyrus/IsisPapyrus/Grammar\IsisLexer.g4 by ANTLR 4.10.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.10.1")]
[System.CLSCompliant(false)]
public partial class IsisLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		LINECOMMENT=1, STRINGCONST=2, PROGRAMSTART=3, PROGRAMEND=4, INSTRUCTIONEND=5, 
		VOID=6, NUMERIC=7, STRING=8, WHILE=9, DO=10, FOR=11, IF=12, ELSE=13, BREAK=14, 
		CONTINUE=15, RETURN=16, PRINT=17, NUMBERCONST=18, BOOLCONST=19, LEFTPAREN=20, 
		RIGHTPAREN=21, LEFTBRACE=22, RIGHTBRACE=23, DOUBLEQUOTE=24, COMMA=25, 
		INCREMENT=26, DECREMENT=27, INCREMENTBY=28, DECREMENTBY=29, MULTIPLYBY=30, 
		DIVIDEBY=31, PLUS=32, MINUS=33, ASSIGN=34, MULTSYMBOL=35, DIVSYMBOL=36, 
		MODSYMBOL=37, GREATEREQUAL=38, LESSEREQUAL=39, NOTEQUALS=40, EQUALS=41, 
		AND=42, OR=43, NOT=44, GREATER=45, LESSER=46, IDENTIFIER=47, WHITESPACE=48, 
		NEWLINE=49, UNRECOGNIZED=50;
	public const int
		COMMENTS=2;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN", "COMMENTS"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"LINECOMMENT", "STRINGCONST", "PROGRAMSTART", "PROGRAMEND", "INSTRUCTIONEND", 
		"VOID", "NUMERIC", "STRING", "WHILE", "DO", "FOR", "IF", "ELSE", "BREAK", 
		"CONTINUE", "RETURN", "PRINT", "RAWNUMBERCONST", "FRACTION", "NUMBERCONST", 
		"THOUSANDSYMBOL", "HUNDREDSYMBOL", "TENSYMBOL", "UNITSYMBOL", "ZERO", 
		"FRACTIONSYMBOL", "TENTHOUSANDSYMBOL", "HUNDREDTHOUSANDSYMBOL", "MILLIONSYMBOL", 
		"BOOLCONST", "TRUE", "FALSE", "LEFTPAREN", "RIGHTPAREN", "LEFTBRACE", 
		"RIGHTBRACE", "DOUBLEQUOTE", "COMMA", "INCREMENT", "DECREMENT", "INCREMENTBY", 
		"DECREMENTBY", "MULTIPLYBY", "DIVIDEBY", "PLUS", "MINUS", "ASSIGN", "MULTSYMBOL", 
		"DIVSYMBOL", "MODSYMBOL", "GREATEREQUAL", "LESSEREQUAL", "NOTEQUALS", 
		"EQUALS", "AND", "OR", "NOT", "GREATER", "LESSER", "NUMBERCHARACTER", 
		"IDENTIFIER", "VALIDLETTER", "WHITESPACE", "NEWLINE", "ANYCHARACTER", 
		"LETTER", "UNRECOGNIZED"
	};


	public IsisLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public IsisLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, "'\\U00013080'", "'\\U0001314A'", "'\\U000132F9'", "'\\U0001316F'", 
		"'\\U000130D5'", "'\\U000130EF'", "'\\U00013133'", "'\\U00013136'", "'\\U00013138'", 
		"'\\U00013038'", "'\\U000131A3'", "'\\U000130BF'", "'\\U00013216'", "'\\U000130C2'", 
		"'\\U000130AB'", null, null, "'\\U00013023'", "'\\U00013022'", "'\\U00013020'", 
		"'\\U00013021'", "'\\U0001339B'", "'\\U000133F0'", null, null, null, null, 
		null, null, "'\\U000130BD'", "'\\U000130BB'", "'\\U0001335D'", "'\\U00013188'", 
		"'\\U000133F5'", "'\\U000132AD'", null, null, null, "'\\U0001339A'", "'\\U00013093'", 
		"'\\U00013098'", "'\\U0001309C'", "'\\U00013287'", "'\\U00013286'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "LINECOMMENT", "STRINGCONST", "PROGRAMSTART", "PROGRAMEND", "INSTRUCTIONEND", 
		"VOID", "NUMERIC", "STRING", "WHILE", "DO", "FOR", "IF", "ELSE", "BREAK", 
		"CONTINUE", "RETURN", "PRINT", "NUMBERCONST", "BOOLCONST", "LEFTPAREN", 
		"RIGHTPAREN", "LEFTBRACE", "RIGHTBRACE", "DOUBLEQUOTE", "COMMA", "INCREMENT", 
		"DECREMENT", "INCREMENTBY", "DECREMENTBY", "MULTIPLYBY", "DIVIDEBY", "PLUS", 
		"MINUS", "ASSIGN", "MULTSYMBOL", "DIVSYMBOL", "MODSYMBOL", "GREATEREQUAL", 
		"LESSEREQUAL", "NOTEQUALS", "EQUALS", "AND", "OR", "NOT", "GREATER", "LESSER", 
		"IDENTIFIER", "WHITESPACE", "NEWLINE", "UNRECOGNIZED"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "IsisLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static IsisLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,50,435,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,2,66,7,66,1,0,1,0,5,0,138,8,0,10,0,12,0,141,9,
		0,1,0,1,0,1,1,1,1,5,1,147,8,1,10,1,12,1,150,9,1,1,1,1,1,1,2,1,2,1,3,1,
		3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,
		1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,4,17,185,8,17,11,
		17,12,17,186,1,17,5,17,190,8,17,10,17,12,17,193,9,17,1,17,5,17,196,8,17,
		10,17,12,17,199,9,17,1,17,3,17,202,8,17,1,17,3,17,205,8,17,1,17,3,17,208,
		8,17,1,17,3,17,211,8,17,1,17,4,17,214,8,17,11,17,12,17,215,1,17,5,17,219,
		8,17,10,17,12,17,222,9,17,1,17,3,17,225,8,17,1,17,3,17,228,8,17,1,17,3,
		17,231,8,17,1,17,3,17,234,8,17,1,17,4,17,237,8,17,11,17,12,17,238,1,17,
		3,17,242,8,17,1,17,3,17,245,8,17,1,17,3,17,248,8,17,1,17,3,17,251,8,17,
		1,17,1,17,3,17,255,8,17,1,17,3,17,258,8,17,1,17,3,17,261,8,17,1,17,1,17,
		3,17,265,8,17,1,17,3,17,268,8,17,1,17,1,17,3,17,272,8,17,1,17,3,17,275,
		8,17,1,18,1,18,1,18,1,19,1,19,1,19,5,19,283,8,19,10,19,12,19,286,9,19,
		1,19,4,19,289,8,19,11,19,12,19,290,3,19,293,8,19,1,20,1,20,1,21,1,21,1,
		22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,1,
		29,1,29,3,29,315,8,29,1,30,1,30,1,31,1,31,1,32,1,32,1,33,1,33,1,34,1,34,
		1,35,1,35,1,36,1,36,1,37,1,37,1,38,1,38,1,38,1,39,1,39,1,39,1,40,1,40,
		1,40,1,41,1,41,1,41,1,42,1,42,1,42,1,43,1,43,1,43,1,44,1,44,1,45,1,45,
		1,46,1,46,1,47,1,47,1,48,1,48,1,49,1,49,1,50,1,50,1,50,1,51,1,51,1,51,
		1,52,1,52,1,52,1,52,3,52,373,8,52,1,53,1,53,1,54,1,54,1,55,1,55,1,56,1,
		56,1,57,1,57,1,58,1,58,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,3,
		59,396,8,59,1,60,1,60,1,60,5,60,401,8,60,10,60,12,60,404,9,60,1,61,3,61,
		407,8,61,1,62,4,62,410,8,62,11,62,12,62,411,1,62,1,62,1,63,1,63,3,63,418,
		8,63,1,63,3,63,421,8,63,1,63,1,63,1,64,1,64,3,64,427,8,64,1,65,1,65,1,
		66,4,66,432,8,66,11,66,12,66,433,1,433,0,67,1,1,3,2,5,3,7,4,9,5,11,6,13,
		7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,0,37,0,
		39,18,41,0,43,0,45,0,47,0,49,0,51,0,53,0,55,0,57,0,59,19,61,0,63,0,65,
		20,67,21,69,22,71,23,73,24,75,25,77,26,79,27,81,28,83,29,85,30,87,31,89,
		32,91,33,93,34,95,35,97,36,99,37,101,38,103,39,105,40,107,41,109,42,111,
		43,113,44,115,45,117,46,119,0,121,47,123,0,125,48,127,49,129,0,131,0,133,
		50,1,0,8,2,0,10,10,13,13,1,0,78268,78276,1,0,78690,78698,1,0,78726,78734,
		1,0,78842,78850,10,0,77824,77927,77929,77962,77964,77996,77998,78115,78117,
		78223,78225,78267,78277,78689,78700,78725,78739,78841,78852,78895,2,0,
		9,9,32,32,1,0,77824,78895,470,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,
		1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,
		0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,
		1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,39,1,0,0,0,0,59,1,0,0,0,0,65,1,0,0,
		0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,
		1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,
		0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,
		1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,
		1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,121,
		1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,133,1,0,0,0,1,135,1,0,0,0,3,144,
		1,0,0,0,5,153,1,0,0,0,7,155,1,0,0,0,9,157,1,0,0,0,11,159,1,0,0,0,13,161,
		1,0,0,0,15,163,1,0,0,0,17,165,1,0,0,0,19,167,1,0,0,0,21,169,1,0,0,0,23,
		171,1,0,0,0,25,173,1,0,0,0,27,175,1,0,0,0,29,177,1,0,0,0,31,179,1,0,0,
		0,33,181,1,0,0,0,35,274,1,0,0,0,37,276,1,0,0,0,39,292,1,0,0,0,41,294,1,
		0,0,0,43,296,1,0,0,0,45,298,1,0,0,0,47,300,1,0,0,0,49,302,1,0,0,0,51,304,
		1,0,0,0,53,306,1,0,0,0,55,308,1,0,0,0,57,310,1,0,0,0,59,314,1,0,0,0,61,
		316,1,0,0,0,63,318,1,0,0,0,65,320,1,0,0,0,67,322,1,0,0,0,69,324,1,0,0,
		0,71,326,1,0,0,0,73,328,1,0,0,0,75,330,1,0,0,0,77,332,1,0,0,0,79,335,1,
		0,0,0,81,338,1,0,0,0,83,341,1,0,0,0,85,344,1,0,0,0,87,347,1,0,0,0,89,350,
		1,0,0,0,91,352,1,0,0,0,93,354,1,0,0,0,95,356,1,0,0,0,97,358,1,0,0,0,99,
		360,1,0,0,0,101,362,1,0,0,0,103,365,1,0,0,0,105,372,1,0,0,0,107,374,1,
		0,0,0,109,376,1,0,0,0,111,378,1,0,0,0,113,380,1,0,0,0,115,382,1,0,0,0,
		117,384,1,0,0,0,119,395,1,0,0,0,121,397,1,0,0,0,123,406,1,0,0,0,125,409,
		1,0,0,0,127,420,1,0,0,0,129,426,1,0,0,0,131,428,1,0,0,0,133,431,1,0,0,
		0,135,139,5,78597,0,0,136,138,8,0,0,0,137,136,1,0,0,0,138,141,1,0,0,0,
		139,137,1,0,0,0,139,140,1,0,0,0,140,142,1,0,0,0,141,139,1,0,0,0,142,143,
		6,0,0,0,143,2,1,0,0,0,144,148,3,73,36,0,145,147,3,129,64,0,146,145,1,0,
		0,0,147,150,1,0,0,0,148,146,1,0,0,0,148,149,1,0,0,0,149,151,1,0,0,0,150,
		148,1,0,0,0,151,152,3,73,36,0,152,4,1,0,0,0,153,154,5,77952,0,0,154,6,
		1,0,0,0,155,156,5,78154,0,0,156,8,1,0,0,0,157,158,5,78585,0,0,158,10,1,
		0,0,0,159,160,5,78191,0,0,160,12,1,0,0,0,161,162,5,78037,0,0,162,14,1,
		0,0,0,163,164,5,78063,0,0,164,16,1,0,0,0,165,166,5,78131,0,0,166,18,1,
		0,0,0,167,168,5,78134,0,0,168,20,1,0,0,0,169,170,5,78136,0,0,170,22,1,
		0,0,0,171,172,5,77880,0,0,172,24,1,0,0,0,173,174,5,78243,0,0,174,26,1,
		0,0,0,175,176,5,78015,0,0,176,28,1,0,0,0,177,178,5,78358,0,0,178,30,1,
		0,0,0,179,180,5,78018,0,0,180,32,1,0,0,0,181,182,5,77995,0,0,182,34,1,
		0,0,0,183,185,3,57,28,0,184,183,1,0,0,0,185,186,1,0,0,0,186,184,1,0,0,
		0,186,187,1,0,0,0,187,191,1,0,0,0,188,190,3,55,27,0,189,188,1,0,0,0,190,
		193,1,0,0,0,191,189,1,0,0,0,191,192,1,0,0,0,192,197,1,0,0,0,193,191,1,
		0,0,0,194,196,3,53,26,0,195,194,1,0,0,0,196,199,1,0,0,0,197,195,1,0,0,
		0,197,198,1,0,0,0,198,201,1,0,0,0,199,197,1,0,0,0,200,202,3,41,20,0,201,
		200,1,0,0,0,201,202,1,0,0,0,202,204,1,0,0,0,203,205,3,43,21,0,204,203,
		1,0,0,0,204,205,1,0,0,0,205,207,1,0,0,0,206,208,3,45,22,0,207,206,1,0,
		0,0,207,208,1,0,0,0,208,210,1,0,0,0,209,211,3,47,23,0,210,209,1,0,0,0,
		210,211,1,0,0,0,211,275,1,0,0,0,212,214,3,55,27,0,213,212,1,0,0,0,214,
		215,1,0,0,0,215,213,1,0,0,0,215,216,1,0,0,0,216,220,1,0,0,0,217,219,3,
		53,26,0,218,217,1,0,0,0,219,222,1,0,0,0,220,218,1,0,0,0,220,221,1,0,0,
		0,221,224,1,0,0,0,222,220,1,0,0,0,223,225,3,41,20,0,224,223,1,0,0,0,224,
		225,1,0,0,0,225,227,1,0,0,0,226,228,3,43,21,0,227,226,1,0,0,0,227,228,
		1,0,0,0,228,230,1,0,0,0,229,231,3,45,22,0,230,229,1,0,0,0,230,231,1,0,
		0,0,231,233,1,0,0,0,232,234,3,47,23,0,233,232,1,0,0,0,233,234,1,0,0,0,
		234,275,1,0,0,0,235,237,3,53,26,0,236,235,1,0,0,0,237,238,1,0,0,0,238,
		236,1,0,0,0,238,239,1,0,0,0,239,241,1,0,0,0,240,242,3,41,20,0,241,240,
		1,0,0,0,241,242,1,0,0,0,242,244,1,0,0,0,243,245,3,43,21,0,244,243,1,0,
		0,0,244,245,1,0,0,0,245,247,1,0,0,0,246,248,3,45,22,0,247,246,1,0,0,0,
		247,248,1,0,0,0,248,250,1,0,0,0,249,251,3,47,23,0,250,249,1,0,0,0,250,
		251,1,0,0,0,251,275,1,0,0,0,252,254,3,41,20,0,253,255,3,43,21,0,254,253,
		1,0,0,0,254,255,1,0,0,0,255,257,1,0,0,0,256,258,3,45,22,0,257,256,1,0,
		0,0,257,258,1,0,0,0,258,260,1,0,0,0,259,261,3,47,23,0,260,259,1,0,0,0,
		260,261,1,0,0,0,261,275,1,0,0,0,262,264,3,43,21,0,263,265,3,45,22,0,264,
		263,1,0,0,0,264,265,1,0,0,0,265,267,1,0,0,0,266,268,3,47,23,0,267,266,
		1,0,0,0,267,268,1,0,0,0,268,275,1,0,0,0,269,271,3,45,22,0,270,272,3,47,
		23,0,271,270,1,0,0,0,271,272,1,0,0,0,272,275,1,0,0,0,273,275,3,47,23,0,
		274,184,1,0,0,0,274,213,1,0,0,0,274,236,1,0,0,0,274,252,1,0,0,0,274,262,
		1,0,0,0,274,269,1,0,0,0,274,273,1,0,0,0,275,36,1,0,0,0,276,277,3,51,25,
		0,277,278,3,35,17,0,278,38,1,0,0,0,279,293,3,49,24,0,280,284,3,35,17,0,
		281,283,3,37,18,0,282,281,1,0,0,0,283,286,1,0,0,0,284,282,1,0,0,0,284,
		285,1,0,0,0,285,293,1,0,0,0,286,284,1,0,0,0,287,289,3,37,18,0,288,287,
		1,0,0,0,289,290,1,0,0,0,290,288,1,0,0,0,290,291,1,0,0,0,291,293,1,0,0,
		0,292,279,1,0,0,0,292,280,1,0,0,0,292,288,1,0,0,0,293,40,1,0,0,0,294,295,
		7,1,0,0,295,42,1,0,0,0,296,297,7,2,0,0,297,44,1,0,0,0,298,299,7,3,0,0,
		299,46,1,0,0,0,300,301,7,4,0,0,301,48,1,0,0,0,302,303,5,78116,0,0,303,
		50,1,0,0,0,304,305,5,77963,0,0,305,52,1,0,0,0,306,307,5,77997,0,0,307,
		54,1,0,0,0,308,309,5,78224,0,0,309,56,1,0,0,0,310,311,5,77928,0,0,311,
		58,1,0,0,0,312,315,3,61,30,0,313,315,3,63,31,0,314,312,1,0,0,0,314,313,
		1,0,0,0,315,60,1,0,0,0,316,317,5,77886,0,0,317,62,1,0,0,0,318,319,5,77887,
		0,0,319,64,1,0,0,0,320,321,5,77859,0,0,321,66,1,0,0,0,322,323,5,77858,
		0,0,323,68,1,0,0,0,324,325,5,77856,0,0,325,70,1,0,0,0,326,327,5,77857,
		0,0,327,72,1,0,0,0,328,329,5,78747,0,0,329,74,1,0,0,0,330,331,5,78832,
		0,0,331,76,1,0,0,0,332,333,3,89,44,0,333,334,3,89,44,0,334,78,1,0,0,0,
		335,336,3,91,45,0,336,337,3,91,45,0,337,80,1,0,0,0,338,339,3,89,44,0,339,
		340,3,93,46,0,340,82,1,0,0,0,341,342,3,91,45,0,342,343,3,93,46,0,343,84,
		1,0,0,0,344,345,3,95,47,0,345,346,3,93,46,0,346,86,1,0,0,0,347,348,3,97,
		48,0,348,349,3,93,46,0,349,88,1,0,0,0,350,351,5,78013,0,0,351,90,1,0,0,
		0,352,353,5,78011,0,0,353,92,1,0,0,0,354,355,5,78685,0,0,355,94,1,0,0,
		0,356,357,5,78216,0,0,357,96,1,0,0,0,358,359,5,78837,0,0,359,98,1,0,0,
		0,360,361,5,78509,0,0,361,100,1,0,0,0,362,363,3,115,57,0,363,364,3,107,
		53,0,364,102,1,0,0,0,365,366,3,117,58,0,366,367,3,107,53,0,367,104,1,0,
		0,0,368,373,5,78745,0,0,369,370,3,113,56,0,370,371,3,107,53,0,371,373,
		1,0,0,0,372,368,1,0,0,0,372,369,1,0,0,0,373,106,1,0,0,0,374,375,5,78746,
		0,0,375,108,1,0,0,0,376,377,5,77971,0,0,377,110,1,0,0,0,378,379,5,77976,
		0,0,379,112,1,0,0,0,380,381,5,77980,0,0,381,114,1,0,0,0,382,383,5,78471,
		0,0,383,116,1,0,0,0,384,385,5,78470,0,0,385,118,1,0,0,0,386,396,3,49,24,
		0,387,396,3,47,23,0,388,396,3,45,22,0,389,396,3,43,21,0,390,396,3,41,20,
		0,391,396,3,53,26,0,392,396,3,55,27,0,393,396,3,57,28,0,394,396,3,51,25,
		0,395,386,1,0,0,0,395,387,1,0,0,0,395,388,1,0,0,0,395,389,1,0,0,0,395,
		390,1,0,0,0,395,391,1,0,0,0,395,392,1,0,0,0,395,393,1,0,0,0,395,394,1,
		0,0,0,396,120,1,0,0,0,397,402,3,123,61,0,398,401,3,123,61,0,399,401,3,
		119,59,0,400,398,1,0,0,0,400,399,1,0,0,0,401,404,1,0,0,0,402,400,1,0,0,
		0,402,403,1,0,0,0,403,122,1,0,0,0,404,402,1,0,0,0,405,407,7,5,0,0,406,
		405,1,0,0,0,407,124,1,0,0,0,408,410,7,6,0,0,409,408,1,0,0,0,410,411,1,
		0,0,0,411,409,1,0,0,0,411,412,1,0,0,0,412,413,1,0,0,0,413,414,6,62,1,0,
		414,126,1,0,0,0,415,417,5,13,0,0,416,418,5,10,0,0,417,416,1,0,0,0,417,
		418,1,0,0,0,418,421,1,0,0,0,419,421,5,10,0,0,420,415,1,0,0,0,420,419,1,
		0,0,0,421,422,1,0,0,0,422,423,6,63,1,0,423,128,1,0,0,0,424,427,9,0,0,0,
		425,427,3,131,65,0,426,424,1,0,0,0,426,425,1,0,0,0,427,130,1,0,0,0,428,
		429,7,7,0,0,429,132,1,0,0,0,430,432,9,0,0,0,431,430,1,0,0,0,432,433,1,
		0,0,0,433,434,1,0,0,0,433,431,1,0,0,0,434,134,1,0,0,0,42,0,139,148,186,
		191,197,201,204,207,210,215,220,224,227,230,233,238,241,244,247,250,254,
		257,260,264,267,271,274,284,290,292,314,372,395,400,402,406,411,417,420,
		426,433,2,0,2,0,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
